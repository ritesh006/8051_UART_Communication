C51 COMPILER V9.60.0.0   SERIAL                                                            11/07/2021 09:33:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\Objects\serial.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE serial.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\se
                    -rial.lst) TABS(2) OBJECT(.\Objects\serial.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          
   4          sbit RS = P2^0;     /* here port 2.0 is renamed as RS (register_select)   */
   5          
   6          sbit RW = P2^1;     /* Port 2.1 is renamed as a RW (read / write) */
   7          
   8          sbit E = P2^2;           /* Port 2.2 is renamed as a E (Enable) */
   9          
  10          
  11          
  12          void send_command(unsigned int command_value);      /* Prototyping of sending command value function */
  13          
  14          void send_data(unsigned int command_data);      /* Prototyping of sending data function */
  15            
  16          void ms_delay(unsigned int time);       /* Prototyping of delay */
  17          
  18          void main()
  19          {
  20   1        
  21   1      
  22   1      TMOD = 0x20;         // timer1 mode2
  23   1      
  24   1      SCON=0x50 ;          // mode1 ren
  25   1      
  26   1      TH1=0x0FD  ;        //9600 baud rate
  27   1      
  28   1      TR1=1; //on timer1 
  29   1      
  30   1      //tx 
  31   1      while(1)
  32   1      {
  33   2        
  34   2        
  35   2        send_command(0x38);         /* Initialize lcd of 2 lines and 5x7 dots use command (0x38) */
  36   2        
  37   2        send_command(0x0E);         /* When display is on cursor will blink  */ 
  38   2        
  39   2        send_command(0x01);         /* This will clear the data which was previously wrote to the disply register
             -s */
  40   2        send_command(0x80);           /* shift curser on 1st line */
  41   2        send_data ('A');
  42   2      SBUF ='L';
  43   2      
  44   2      while(!TI);
  45   2      TI=0;
  46   2        
  47   2      SBUF ='A';
  48   2      while(!TI);
  49   2      TI=0;
  50   2        
  51   2      SBUF ='B';
  52   2      while(!TI);
  53   2      TI=0;
C51 COMPILER V9.60.0.0   SERIAL                                                            11/07/2021 09:33:26 PAGE 2   

  54   2        
  55   2      
  56   2      //rx
  57   2      while(!RI);
  58   2      P1=SBUF;
  59   2      RI=0;
  60   2        
  61   2      while(!RI);
  62   2      P1=SBUF;
  63   2      RI=0;
  64   2      
  65   2      }
  66   1        
  67   1      }
  68              void send_command(unsigned int command_value) /* this function send command value p1 to command register
             -_ */
  69          {
  70   1        P1 = command_value;     /* command value send to port P1 */
  71   1        RW = 0;                 /* for accpet data, logic low enble the write data_ pin */
  72   1        RS = 0;               /* for selecting instruction command code register in LCD use RS = low */
  73   1        E = 1;                /* To latch data present in port 1 to LCD enable pin set to high */
  74   1        ms_delay(10);         /* add some delay of 10ms */
  75   1        E = 0;                /* then enable pin set to low for completion of latching data */
  76   1      }
  77          
  78          
  79          void send_data(unsigned int data_value)
  80          {
  81   1        P1 = data_value;      /* Send data for display on lcd to Port 1 */
  82   1        RW = 0;               /* read / write pin enable using logic low for writing a data_ */
  83   1        RS = 1;               /* selecting data register using logic high */
  84   1        E = 1;                /* To latch data present in port 1 to LCD enable pin set to high */
  85   1        ms_delay(10);         /* add some delay of 10ms */
  86   1        E = 0;                /* then enable pin set to low for completion of latching data */
  87   1      
  88   1      }
  89          
  90          
  91          void ms_delay (unsigned int time)
  92          {
  93   1        unsigned int i, j;
  94   1        
  95   1        /* if we pass time argument equal to 1000 then (time * 1 ms) equal to 1 sec of 
  96   1           dealy will generate */
  97   1        
  98   1      
  99   1        for (i = 0; i < time; i++)
 100   1        {
 101   2          for (j = 0; j < 113; j++)         /* This will generate delay of 1 m.s. */
 102   2          {
 103   3          }
 104   2        }
 105   1        
 106   1      }                                                                                                                                                                                                                 
             -                  
 107                                                                                                                                                                                                                              
             -                    


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    150    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   SERIAL                                                            11/07/2021 09:33:26 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
